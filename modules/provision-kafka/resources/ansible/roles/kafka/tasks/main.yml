- name: "Create group kafka"
  group:
    name: "kafka"
    state: present

- name: "Add user kafka" # with a bash shell and add to respective group"
  user:
    name: "kafka"
    #shell: /bin/bash
    group: "kafka"

- name: "Check if Kafka tar exists"
  stat: path={{ kafka.landing_zone }}/{{ kafka.archived_file }}
  register: kafka_tar_exists

- name: "Download Kafka tar to {{ kafka.landing_zone }}"
  get_url:
    url: "{{ kafka.url }}"
    dest: "{{ kafka.landing_zone }}"
  when: not kafka_tar_exists.stat.exists

- name: "Extract Kafka tar to {{ kafka.landing_zone }}"
  unarchive:
    src: "{{ kafka.landing_zone }}/{{ kafka.archived_file }}"
    dest: "{{ kafka.landing_zone }}"
    remote_src: yes
    owner: kafka
    group: kafka

- name: "Delete Kafka tar from {{ kafka.landing_zone }}"
  file:
    path: "{{ kafka.landing_zone }}/{{ kafka.archived_file }}"
    state: absent

- name: Create Kafka log directory
  file:
    path: "{{ kafka.log_path }}"
    state: directory
    mode: "0755"
    owner: kafka
    group: kafka

- name: Create server.properties files
  connection: local
  command: sh -c "printf 'broker.id={{ index }}\nlisteners=INTERNAL://{{ item }}:9092,EXTERNAL://{{ hostvars[item].public_dns }}:9990\nlog.dirs=/tmp/kafka-logs\n{{ kafka.z_conn }}\n{{ kafka.zct }}\nadvertised.listeners=INTERNAL://{{ item }}:9092,EXTERNAL://{{ hostvars[item].public_dns }}:9990\nadvertised.host.name={{ hostvars[item].public_dns }}\n{{ kafka.adv_port }}\n{{ kafka.lspm }}\n{{ kafka.ibln }}\n{{ kafka.otrf }}' | ssh -i {{ kafka.id_rsa }} centos@{{ hostvars[item].ansible_host }} -T  'cat > /home/centos/server.properties'"
  loop: "{{ groups['kafka_servers'] }}"
  loop_control:
    index_var: index

- name: Copy server.properties to config
  copy:
    remote_src: True
    src: "/home/centos/server.properties"
    dest: "{{ kafka.landing_zone }}/{{ kafka.kafka_home }}/config/server.properties"
    owner: kafka
    group: kafka

- name: Remove /home/centos/server.properties
  file:
    path: "/home/centos/server.properties"
    state: absent

- name: 60 second pause
  pause:
    seconds: 60

- name: start kafka
  template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
    owner: kafka
    group: kafka
    mode: 644
    force: yes

- name: reload systemd daemon
  shell: "systemctl daemon-reload"
  notify: restart kafka
